* 各スライドページで述べたいこと(訴求ポイント)
・各スライドページに挿入する図表

・言うこと

--------------------------------------------------
Section 1 はじめに
--------------------------------------------------
1. 背景
2. ブラックボックス関数
3. ベイズ最適化
4. 本論文の貢献
--------------------------------------------------
1. 背景
--------------------------------------------------
・訴求ポイント
	- 背景(導入)として，実例について説明する

・説明事項
	- ロボットの開発以外にも，様々な例が考えられ，このような問題をどのように解決するでしょうか？
	→入出力関係をブラックボックス関数で定式化する
・文字の下に，新規タンパク質の開発や，ロボットの開発などに関する，具体的な例を図とともに示す


・実問題: 耐久性の高いロボットの開発
・目的関数: y(耐久性能が高いと目的関数の値が大きくなるなど)

・変更したい点
スライドの図のフォントが若干見ずらいので，フォントを変更する
・挿入画像(著作権フリー)
https://www.freepik.com/free-psd/robotic-arm_13303778.htm#query=manufacturing%20robot&position=15&from_view=keyword


--------------------------------------------------
2. ブラックボックス関数
--------------------------------------------------
* ブラックボックス関数について説明する(前提知識の提供)

・説明事項
	- ロボットの問題などの問題だと，新しいロボット作るのに100万円かかったり，いざ作ったロボットが壊れるまで耐久試験をするのも時間がかかる
	- ブラックボックス関数をできるだけ少ない関数評価回数で持って最適な解を見つけることが期待できる有効なテクニックとして，ベイズ最適化という手法があります
	- 下の図は，ベイズ最適化を表現した模式図となっている
	- ベイズ最適化は3つのステップからなります
	- 各ステップを説明する
	- アップデートされた点から，さらにこのループを繰り返す
	- このループを繰り返すことで，効率的に所望の最適解をできるだけ少ない回数で見つけることができると期待できる

・ベイズ最適化のステップ
	- 1. 手元に持っているデータから予測モデルを作成します．
	- 2. 予測モデルを最も改善する点を計算
		(続いて，予測モデルに基づいて，予測モデルを最も改善してくれるであろう点を，今構築したモデルに基づいて決定します．)
		- 決定する尺度は獲得関数と呼ばれる．要は，予測モデルの改善の度合いを定量化した関数
	- 3. 人間や機械が，次にこの点を観測すべきでしょうと提案された点を実際に観測して，
		 提案された点とその点における実際の観測値を訓練データ(手元に持っているデータ)に加えて，訓練データをアップデート


・関数の具体的な形状が不明
・各入力における関数値を得るには，大きなコストがかかる

・疑問点
	- page1とpage2のxiとyiは対応していない？

・説明事項
	- ブラックボックス関数を用いると，入出力関係が図のように表現される


--------------------------------------------------
3. ベイズ最適化
--------------------------------------------------
* ベイズ最適化について説明する(前提知識の提供)

・初めに前スライドで説明したブラックボックス関数の最適化を行うための手法として，ベイズ最適化があることを述べる

・「多くの実問題は，」の直前にベイズ最適化のフローに関する図を示す

--------------------------------------------------
4. 本論文の貢献
--------------------------------------------------
* 本論文の貢献として，ベイズ最適化の一つの手法であるGP-UCBを提案したことを示す
	- その手法が，探索と活用のバランスが取れた手法であることを述べる
* 本論文の貢献として，提案手法が，実験的に良い性能を示すことを述べる




--------------------------------------------------
Section 2 ベイズ最適化
--------------------------------------------------
5. 問題設定
6. ガウス過程
7. ベイズ最適化1
8. 獲得関数
9. 従来の獲得関数

--------------------------------------------------
5. 問題設定
--------------------------------------------------
* 問題設定を定式化して示す




--------------------------------------------------
6. ガウス過程
--------------------------------------------------
* 本スライドでは，ガウス過程の定義を示す(前提知識の提供)




--------------------------------------------------
7. ベイズ最適化1
--------------------------------------------------
* (ガウス過程を用いた)ベイズ最適化のアルゴリズムを示す

1. 事前分布の設定(目的関数に対する予想を表す)
2. 


--------------------------------------------------
8. 獲得関数
--------------------------------------------------
* 獲得関数とは何かについて示す

・活用: 過去のデータを活用
	- 既知の情報を用いて最適解を見つけること
・探索: 未知の領域を探索
	- 未知の領域を探索して新たな最適解を見つけること


--------------------------------------------------
9. 従来の獲得関数
--------------------------------------------------
* 従来の獲得関数について示す(探索重視のものと活用重視のものがあり，それぞれがトレードオフの関係にあることを示す)

・説明事項
	- 上式の意味の説明
		- 現在のデータxに対する予測分散σの最大を次の探索点として選ぶ
		- 分散(散らばり)を重視した手法なので，探索中心の手法
	- 下式の意味の説明
		- 現在のデータxに対する予測平均μの最大を次の探索点として選ぶ
		- 平均(期待値)を重視した手法なので，活用中心の手法


--------------------------------------------------
Section GP-UCB
--------------------------------------------------
10. 提案手法
11. GP-UCBのアルゴリズム

--------------------------------------------------
10. 提案手法
--------------------------------------------------
* GP-UCBの定義を示す


・説明事項
	- 従来の獲得関数では最適化がうまくいかないことが多いため，GP-UCBを提案したことを述べる
	- 


--------------------------------------------------
11. GP-UCBのアルゴリズム
--------------------------------------------------
* GP-UCBのアルゴリズムを示す

・GP-UCBのアルゴリズムのコードの退避
	\begin{itemize}
		\item 初期化: 最初に，$f$の予測分布を設定する．これは$f$の予測分布を表すカーネルを選択し，そのカーネルに対応するガウス過程を設定することで行われる．
		\item アクションの選択: 次に，$f$の予測分布から，次のような式を用いてアクションを選択する
		\begin{itemize}
			\item $a_t = argmax_{a \in D} (\mu_t(a) + \beta_t \sigma_t(a))$
		\end{itemize}
		ここで、$\mu_t(a)$ は、時刻 t において、a が選択されると予測される f の平均値を表します。$\sigma_t(a)$ は、時刻 t において、a が選択されると予測される f の不確実性を表します。$\beta_t$ は、時刻 t においてのアクションの選択におけるリスク係数を表します
		\item 報酬の観測: 選択したアクション$a_t$に対して報酬$r_t$を観測する．
		\item 予測分布の更新: 次に，最新のアクション$a_t$を使用してfの予測分布を更新する.これは，ガウス過程のアップデートによって行われる．
	\end{itemize}

--------------------------------------------------
Section 4 実験
--------------------------------------------------
12. 実験手法
13. 実験対象データ
14. 実験結果

--------------------------------------------------
12. 実験手法
--------------------------------------------------
* 実験手法を示す(性能を比較する手法やregretの簡単な説明)


・説明事項
	- 5つの手法が何かの説明
	- 評価指標の説明
	- Mean Average Regretが何かをRegret→Average Regret⇨Mean Average Regretの順に説明
variance onlyやmaximum meanは，ナイーブな手法
EIやMPIはヒューリスティックな手法
・variance only
・maximum mean
・Expected Improvement(EI)
・Most Probable Improvement(MPI)
・GP-UCB




--------------------------------------------------
13. 実験対象データ
--------------------------------------------------
* 実験設定(実験を行うデータセット)を示す

・synthetic data:
	-人工的に作成した合成データ
・real sensor network data:
	-46個のセンサーを用いて5日間に渡って収集された温度データ(Intel Research Berkeley)
	-カリフォルニア州 I-880 South 高速道路に設置された交通センサーのデータ

・説明事項
	- 3つのデータセットに対して
		- データセット
		- T, σ^2, δ
		- 試行回数

・データの意味
	- T : 繰り返し回数
	- σ^2 : ノイズの分散
	- δ :
・Question
	- deltaが同じ理由

--------------------------------------------------
14. 実験結果
--------------------------------------------------
* 実験結果を示す
・論文中の Figure4の図を挿入する(挿入箇所言及なし)

・説明事項
	- 3つのグラフが何か
	- グラフの軸の説明
	- Var onlyやMean onlyだけでは性能が悪いのに，UCBは非常に良い最適化となる

--------------------------------------------------
Section 5 まとめ
--------------------------------------------------
15. 結論
・累積リグレットがの理論

・結論
	- GP-UCBというベイズ最適化の獲得関数を提案しました．(GP-UCBの提案自体+)
	  - GP-UCBは探索と活用が取れる獲得関数である
		(トレードオフを取れる獲得関数を提案しました)
	- 実験でもいい性能が確認できました．
		(実データに当てはめた結果，実際に効果的に使えることができた)
--------------------------------------------------
15. 結論
--------------------------------------------------
* 論文のまとめを行う





--------------------------------------------------

--------------------------------------------------
